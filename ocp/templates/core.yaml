apiVersion: instana.io/v1beta2
kind: Core
metadata:
  namespace: instana-core
  name: instana-core
spec:
  resourceProfile: small
  deploymentStrategyType: RollingUpdate

  # Base domain for Instana
  baseDomain: ${INSTANA_BASE_DOMAIN}

  # Host and port for the agent acceptor, usually a subdomain of the base domain
  agentAcceptorConfig:
    host: ${INSTANA_AGENT_ACCEPTOR}
    port: 443

  # dockerRegistryURI: containers.instana.io
  imageConfig:
    registry: artifact-public.instana.io
    tag: 3.283.427-0

  imagePullSecrets:
    - name: instana-registry

  # URL for downloading the GeoLite2 geo-location data file
  # geoDbUrl:

  properties:
    - name: retention.metrics.rollup5
      value: "86400"
    - name: retention.metrics.rollup60
      value: "2678400"
    - name: retention.metrics.rollup300
      value: "8035200"
    - name: retention.metrics.rollup3600
      value: "34214400"
    - name: config.appdata.shortterm.retention.days
      value: "7"
    - name: config.synthetics.retention.days
      value: "7"

  # Datastore configs
  datastoreConfigs:
    beeInstanaConfig:
      authEnabled: true
      clustered: true
      hosts:
      - aggregators.beeinstana.svc
      ports:
      - name: tcp
        port: 9998
    cassandraConfigs:
    - hosts:
      - instana-cassandra-service.instana-cassandra.svc
      datacenter: cassandra
      authEnabled: true
      replicationFactor: 1
    clickhouseConfigs:
    - clusterName: local
      authEnabled: true
      hosts:
        - chi-instana-local-0-0.instana-clickhouse.svc
        - chi-instana-local-0-1.instana-clickhouse.svc
    elasticsearchConfig:
      clusterName: instana
      defaultIndexReplicas: 0
      defaultIndexRoutingPartitionSize: 1
      defaultIndexShards: 1
      hosts:
      - instana-es-http.instana-elastic.svc
      authEnabled: true
    kafkaConfig:
      authEnabled: true
      hosts:
      - instana-kafka-bootstrap.instana-kafka.svc
      replicationFactor: 1
      saslMechanism: SCRAM-SHA-512
    postgresConfigs:
    - authEnabled: true
      hosts:
        - postgres-rw.instana-postgres.svc

  featureFlags:
    - name: beeinstana
      enabled: true
    - name: feature.beeinstana.enabled
      enabled: true
    - name: feature.beeinstana.infra.metrics.enabled
      enabled: true
    - name: feature.infra.explore.presentation.enabled
      enabled: true
    # - name: feature.infrastructure.explore.data.enabled
    #   enabled: true
    - name: feature.automation.enabled
      enabled: true
    - name: feature.infra.metrics.widget.enabled
      enabled: true
    # - name: feature.plugin.entity.metric.statistics.enabled
    #   enabled: true
    - name: feature.smart.alerts.logs.blueprint.enabled
      enabled: true
    - name: feature.infra.smart.alerts.enabled
      enabled: true
    - name: feature.synthetics.enabled
      enabled: true
    - name: feature.synthetic.smart.alerts.enabled
      enabled: true
    - name: syntheticSmartAlertsEnabled
      enabled: true
    - name: feature.synthetic.create.test.advance.mode.enabled
      enabled: true
    - name: feature.synthetic.browser.create.test.enabled
      enabled: true
    - name: feature.synthetic.browser.script.enabled
      enabled: true
    - name: feature.vsphere.enabled
      enabled: false      
    - name: feature.automation.enabled
      enabled: true      
    - name: feature.action.automation.enabled
      enabled: true
    - name: feature.logging.enabled
      enabled: true
    - name: feature.kubernetes.logging.enabled
      enabled: true
  # Use one of smtpConfig or sesConfig
  emailConfig:
    smtpConfig:
      check_server_identity: false
      from: test@example.com
      host: example.com
      port: 465
      startTLS: false
      useSSL: false

    # sesConfig:
    #   from:
    #   region:
    #   returnPath:
  
  operationMode: normal
  operationScopes:
  - core
  - global
  storageConfigs:
  #   Use either s3Config, gcloudConfig, or pvcConfig

    ## External Storage for raw spans ##
    rawSpans:
      pvcConfig:
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 100Gi
        storageClassName: ${RWX_STORAGECLASS}
  
    synthetics:
      pvcConfig:
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 50Gi
        storageClassName: ${RWX_STORAGECLASS}
        
    syntheticsKeystore:
      pvcConfig:
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 10Gi
        storageClassName: ${RWX_STORAGECLASS}
        
  #     s3Config:
  #       bucket:
  #       bucketLongTerm:
  #       endpoint:
  #       prefix:
  #       prefixLongTerm:
  #       region:
  #       storageClass:
  #       storageClassLongTerm:
  #       accessKeyId:
  #       secretAccessKey:

  #     gcloudConfig:
  #       bucket:
  #       bucketLongTerm:
  #       prefix:
  #       prefixLongTerm:
  #       storageClass:
  #       storageClassLongTerm:
  #       serviceAccountKey:

  #     pvcConfig:
  #       accessModes:
  #         - ReadWriteMany
  #       resources:
  #         requests:
  #           storage: 100Gi
  #       storageClassName: my-fast-storage

    #   ## External Storage for synthetics test results ##
  #   synthetics:
  #     s3Config:
  #       bucket:
  #       bucketLongTerm:
  #       endpoint:
  #       prefix:
  #       prefixLongTerm:
  #       region:
  #       storageClass:
  #       storageClassLongTerm:
  #       accessKeyId:
  #       secretAccessKey:

  #     gcloudConfig:
  #       bucket:
  #       bucketLongTerm:
  #       prefix:
  #       prefixLongTerm:
  #       storageClass:
  #       storageClassLongTerm:
  #       serviceAccountKey:



  # Service provider configs for SAML or OIDC
  # serviceProviderConfig:
    # Base URL (defaults to "/auth")
    # basePath:

    # The maximum IDP metadata size (defaults to 200000)
    # maxAuthenticationLifetimeSeconds:

    # The maximum authentication lifetime (defaults to 604800)
    # maxIDPMetadataSizeInBytes: